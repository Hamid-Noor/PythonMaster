[
  {
    "id": 1,
    "title": "تحلیل حلقه for ساده",
    "difficulty": "مبتدی",
    "description": "در این تمرین، نحوه کارکرد حلقه for در پایتون را یاد خواهید گرفت.",
    "code": "for i in range(5):\n    print(f\"عدد: {i}\")\n    if i == 3:\n        print(\"رسیدیم به سه!\")",
    "concepts": [
      "حلقه for",
      "تابع range",
      "f-string",
      "دستور if"
    ],
    "hints": [
      "حلقه for از 0 شروع می‌شود",
      "range(5) اعداد 0 تا 4 تولید می‌کند",
      "f-string برای قالب‌بندی رشته استفاده می‌شود"
    ],
    "questions": [
      {
        "question": "این حلقه چند بار اجرا می‌شود؟",
        "type": "multiple_choice",
        "options": ["4 بار", "5 بار", "6 بار", "نامحدود"],
        "answer": "5 بار"
      },
      {
        "question": "مقدار i در اولین تکرار چیست؟",
        "type": "multiple_choice",
        "options": ["0", "1", "2", "3"],
        "answer": "0"
      },
      {
        "question": "چه زمانی پیام 'رسیدیم به سه!' چاپ می‌شود؟",
        "type": "text",
        "answer": "وقتی i برابر 3 باشد"
      }
    ]
  },
  {
    "id": 2,
    "title": "تحلیل تابع محاسبه مجموع",
    "difficulty": "متوسط",
    "description": "در این تمرین، نحوه تعریف و استفاده از توابع را بررسی می‌کنیم.",
    "code": "def calculate_sum(numbers):\n    total = 0\n    for num in numbers:\n        total += num\n    return total\n\nresult = calculate_sum([1, 2, 3, 4, 5])\nprint(f\"مجموع: {result}\")",
    "concepts": [
      "تعریف تابع",
      "پارامتر تابع",
      "حلقه for",
      "return statement",
      "فراخوانی تابع"
    ],
    "hints": [
      "تابع با کلیدواژه def تعریف می‌شود",
      "پارامتر numbers لیستی از اعداد دریافت می‌کند",
      "متغیر total برای جمع کردن استفاده می‌شود"
    ],
    "questions": [
      {
        "question": "نام تابع چیست؟",
        "type": "text",
        "answer": "calculate_sum"
      },
      {
        "question": "این تابع چه کاری انجام می‌دهد؟",
        "type": "multiple_choice",
        "options": ["اعداد را ضرب می‌کند", "اعداد را جمع می‌کند", "اعداد را تقسیم می‌کند", "اعداد را کم می‌کند"],
        "answer": "اعداد را جمع می‌کند"
      },
      {
        "question": "مقدار بازگشتی تابع برای لیست [1, 2, 3, 4, 5] چیست؟",
        "type": "multiple_choice",
        "options": ["10", "15", "20", "25"],
        "answer": "15"
      }
    ]
  },
  {
    "id": 3,
    "title": "تحلیل کلاس Student",
    "difficulty": "پیشرفته",
    "description": "در این تمرین، مفاهیم برنامه‌نویسی شی‌گرا را بررسی می‌کنیم.",
    "code": "class Student:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n    \n    def introduce(self):\n        return f\"سلام، من {self.name} هستم و {self.age} سال دارم\"\n    \n    def is_adult(self):\n        return self.age >= 18\n\nstudent = Student(\"علی\", 20)\nprint(student.introduce())\nprint(f\"بزرگسال است: {student.is_adult()}\")",
    "concepts": [
      "تعریف کلاس",
      "سازنده (__init__)",
      "متدهای کلاس",
      "self parameter",
      "ایجاد شیء",
      "فراخوانی متد"
    ],
    "hints": [
      "کلاس با کلیدواژه class تعریف می‌شود",
      "__init__ سازنده کلاس است",
      "self به شیء جاری اشاره می‌کند",
      "متدها توابع درون کلاس هستند"
    ],
    "questions": [
      {
        "question": "نام کلاس چیست؟",
        "type": "text",
        "answer": "Student"
      },
      {
        "question": "متد __init__ چه کاری انجام می‌دهد؟",
        "type": "multiple_choice",
        "options": ["شیء را حذف می‌کند", "شیء را مقداردهی می‌کند", "شیء را کپی می‌کند", "شیء را چاپ می‌کند"],
        "answer": "شیء را مقداردهی می‌کند"
      },
      {
        "question": "متد is_adult چه زمانی True برمی‌گرداند؟",
        "type": "text",
        "answer": "وقتی سن 18 یا بیشتر باشد"
      }
    ]
  },
  {
    "id": 4,
    "title": "مدیریت استثنا",
    "difficulty": "متوسط",
    "description": "در این تمرین، نحوه مدیریت خطاها و استثناها را یاد می‌گیریم.",
    "code": "def divide_numbers(a, b):\n    try:\n        result = a / b\n        return result\n    except ZeroDivisionError:\n        return \"خطا: تقسیم بر صفر\"\n    except Exception as e:\n        return f\"خطا: {e}\"\n\nprint(divide_numbers(10, 2))\nprint(divide_numbers(10, 0))\nprint(divide_numbers(\"10\", 2))",
    "concepts": [
      "try-except",
      "مدیریت استثنا",
      "ZeroDivisionError",
      "Exception handling",
      "نوع خطا"
    ],
    "hints": [
      "try-except برای مدیریت خطا استفاده می‌شود",
      "ZeroDivisionError هنگام تقسیم بر صفر رخ می‌دهد",
      "Exception کلاس والد همه خطاهاست"
    ],
    "questions": [
      {
        "question": "نتیجه divide_numbers(10, 2) چیست؟",
        "type": "multiple_choice",
        "options": ["5.0", "خطا: تقسیم بر صفر", "خطا", "10"],
        "answer": "5.0"
      },
      {
        "question": "نتیجه divide_numbers(10, 0) چیست؟",
        "type": "multiple_choice",
        "options": ["0", "خطا: تقسیم بر صفر", "inf", "None"],
        "answer": "خطا: تقسیم بر صفر"
      },
      {
        "question": "چرا از try-except استفاده می‌شود؟",
        "type": "text",
        "answer": "برای مدیریت خطاها و جلوگیری از توقف برنامه"
      }
    ]
  },
  {
    "id": 5,
    "title": "کار با لیست و حلقه",
    "difficulty": "مبتدی",
    "description": "در این تمرین، کار با لیست‌ها و حلقه‌ها را یاد می‌گیریم.",
    "code": "numbers = [1, 2, 3, 4, 5]\neven_numbers = []\n\nfor num in numbers:\n    if num % 2 == 0:\n        even_numbers.append(num)\n\nprint(f\"اعداد زوج: {even_numbers}\")\nprint(f\"تعداد اعداد زوج: {len(even_numbers)}\")",
    "concepts": [
      "لیست",
      "حلقه for",
      "شرط if",
      "عملگر modulo",
      "متد append",
      "تابع len"
    ],
    "hints": [
      "عملگر % باقی‌مانده تقسیم را برمی‌گرداند",
      "اعداد زوج باقی‌مانده تقسیم بر 2 آنها صفر است",
      "append برای اضافه کردن به لیست استفاده می‌شود"
    ],
    "questions": [
      {
        "question": "کدام اعداد در لیست even_numbers قرار می‌گیرند؟",
        "type": "multiple_choice",
        "options": ["[1, 3, 5]", "[2, 4]", "[1, 2, 3, 4, 5]", "[]"],
        "answer": "[2, 4]"
      },
      {
        "question": "تعداد اعداد زوج چیست؟",
        "type": "multiple_choice",
        "options": ["1", "2", "3", "4"],
        "answer": "2"
      },
      {
        "question": "شرط num % 2 == 0 چه کاری انجام می‌دهد؟",
        "type": "text",
        "answer": "بررسی می‌کند که آیا عدد زوج است یا نه"
      }
    ]
  },
  {
    "id": 6,
    "title": "تحلیل دیکشنری",
    "difficulty": "متوسط",
    "description": "در این تمرین، کار با دیکشنری‌ها را یاد می‌گیریم.",
    "code": "student_grades = {\n    \"علی\": 85,\n    \"فاطمه\": 92,\n    \"حسن\": 78,\n    \"زهرا\": 95\n}\n\ntotal_grade = 0\nstudent_count = 0\n\nfor name, grade in student_grades.items():\n    print(f\"{name}: {grade}\")\n    total_grade += grade\n    student_count += 1\n\naverage = total_grade / student_count\nprint(f\"میانگین نمرات: {average:.2f}\")",
    "concepts": [
      "دیکشنری",
      "حلقه for",
      "متد items",
      "کلید و مقدار",
      "محاسبه میانگین",
      "قالب‌بندی اعداد"
    ],
    "hints": [
      "دیکشنری جفت کلید-مقدار ذخیره می‌کند",
      "items() کلید و مقدار را برمی‌گرداند",
      ":.2f برای نمایش 2 رقم اعشار استفاده می‌شود"
    ],
    "questions": [
      {
        "question": "میانگین نمرات چیست؟",
        "type": "multiple_choice",
        "options": ["85.5", "87.5", "90.0", "92.5"],
        "answer": "87.5"
      },
      {
        "question": "متد items() چه کاری انجام می‌دهد؟",
        "type": "multiple_choice",
        "options": ["فقط کلیدها را برمی‌گرداند", "فقط مقدارها را برمی‌گرداند", "کلید و مقدار را برمی‌گرداند", "طول دیکشنری را برمی‌گرداند"],
        "answer": "کلید و مقدار را برمی‌گرداند"
      },
      {
        "question": "تعداد دانش‌آموزان چیست؟",
        "type": "text",
        "answer": "4"
      }
    ]
  },
  {
    "id": 7,
    "title": "تحلیل تابع بازگشتی",
    "difficulty": "پیشرفته",
    "description": "در این تمرین، مفهوم بازگشت (recursion) را بررسی می‌کنیم.",
    "code": "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n\nprint(f\"فاکتوریل 5: {factorial(5)}\")\nprint(f\"فیبوناچی 6: {fibonacci(6)}\")",
    "concepts": [
      "بازگشت (recursion)",
      "شرط پایان",
      "فاکتوریل",
      "فیبوناچی",
      "تابع بازگشتی"
    ],
    "hints": [
      "تابع بازگشتی خودش را فراخوانی می‌کند",
      "شرط پایان برای جلوگیری از بی‌نهایت لازم است",
      "فاکتوریل n برابر n! = n × (n-1)! است"
    ],
    "questions": [
      {
        "question": "فاکتوریل 5 چیست؟",
        "type": "multiple_choice",
        "options": ["24", "60", "120", "720"],
        "answer": "120"
      },
      {
        "question": "فیبوناچی 6 چیست؟",
        "type": "multiple_choice",
        "options": ["5", "8", "13", "21"],
        "answer": "8"
      },
      {
        "question": "چرا شرط پایان در تابع بازگشتی مهم است؟",
        "type": "text",
        "answer": "برای جلوگیری از بی‌نهایت شدن فراخوانی‌ها"
      }
    ]
  },
  {
    "id": 8,
    "title": "کار با فایل",
    "difficulty": "متوسط",
    "description": "در این تمرین، نحوه کار با فایل‌ها را یاد می‌گیریم.",
    "code": "def read_file(filename):\n    try:\n        with open(filename, 'r', encoding='utf-8') as file:\n            content = file.read()\n            return content\n    except FileNotFoundError:\n        return \"فایل یافت نشد\"\n    except Exception as e:\n        return f\"خطا: {e}\"\n\ndef write_file(filename, content):\n    try:\n        with open(filename, 'w', encoding='utf-8') as file:\n            file.write(content)\n            return \"فایل با موفقیت ذخیره شد\"\n    except Exception as e:\n        return f\"خطا: {e}\"\n\ncontent = \"سلام دنیا!\"\nresult = write_file(\"test.txt\", content)\nprint(result)",
    "concepts": [
      "کار با فایل",
      "with statement",
      "encoding",
      "FileNotFoundError",
      "خواندن فایل",
      "نوشتن فایل"
    ],
    "hints": [
      "with statement فایل را خودکار می‌بندد",
      "encoding='utf-8' برای متن فارسی ضروری است",
      "'r' برای خواندن و 'w' برای نوشتن استفاده می‌شود"
    ],
    "questions": [
      {
        "question": "با چه دستوری فایل باز می‌شود؟",
        "type": "multiple_choice",
        "options": ["open()", "read()", "write()", "file()"],
        "answer": "open()"
      },
      {
        "question": "مزیت استفاده از with statement چیست؟",
        "type": "text",
        "answer": "فایل را خودکار می‌بندد"
      },
      {
        "question": "encoding='utf-8' چرا مهم است؟",
        "type": "text",
        "answer": "برای پشتیبانی از متن فارسی"
      }
    ]
  }
]
